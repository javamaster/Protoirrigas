/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.mau.screens;

import br.com.mau.dao.impl.GenericDAO;
import br.com.mau.model.Setor;
import br.com.mau.tablemodel.SetorTableModel;
import br.com.mau.util.JPAUtil;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import prototirrigas.relatorios.DataExportExcel;
import prototirrigas.relatorios.FileCustomFilter;

/**
 *
 * @author Mauricio
 */
public class JIFGestaoSetor extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIFGestaoSetor
     */
    public JIFGestaoSetor() {
        initComponents();
        listenerTable();
        jbExportar.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtSetores = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tfPesquisar = new javax.swing.JTextField();
        jbNovo = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbPesquisar = new javax.swing.JButton();
        jbFechar = new javax.swing.JButton();
        jbExportar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Setor");

        jtSetores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Cultura", "Tipo Solo", "Descrição", "Comprimento", "Largura", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtSetores);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Pesquisar:");

        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/images/disk.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/images/alter.png"))); // NOI18N
        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/images/trash.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/images/user.png"))); // NOI18N
        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        jbFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/images/cancel.png"))); // NOI18N
        jbFechar.setText("Fechar");
        jbFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharActionPerformed(evt);
            }
        });

        jbExportar.setText("Exportar");
        jbExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbFechar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbExportar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPesquisar)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbEditar, jbExcluir, jbExportar, jbFechar, jbNovo, jbPesquisar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbEditar)
                    .addComponent(jbExcluir)
                    .addComponent(jbPesquisar)
                    .addComponent(jbFechar)
                    .addComponent(jbExportar))
                .addGap(23, 23, 23))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jbEditar, jbExcluir, jbExportar, jbFechar, jbNovo, jbPesquisar});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        String pesquisaText = tfPesquisar.getText().trim();
        this.setores = null;
        
        try {
            
        if(!pesquisaText.isEmpty()){
            this.setores = FindCultureAtBase(pesquisaText);            
        }
        else{        
            this.setores = findAllCultures();
        }                    
            SetorTableModel tm = new SetorTableModel(this.setores);            
            jtSetores.setModel(tm);        
            habilitaExportarDados();
            
        } catch (Exception e) {            
            e.printStackTrace();            
        }
    }//GEN-LAST:event_jbPesquisarActionPerformed

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        JIFSetor setor = new JIFSetor();
        
        getParent().add(setor);
        
        setor.setVisible(true);
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharActionPerformed
        dispose();
    }//GEN-LAST:event_jbFecharActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        GenericDAO dao = new GenericDAO(JPAUtil.createEntityManager(), Setor.class);
        Setor s = getSelectedSetor();
        if(s == null){
            JOptionPane.showMessageDialog(null, "Selecione uma linha!!");
        }
        else{
            int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente Excluir?", "Exclusão",
                    JOptionPane.YES_NO_OPTION);

            if(resp == JOptionPane.YES_OPTION){
                dao.delete(s.getId());
            }
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        Setor s = getSelectedSetor();
        
        if(s == null){
            JOptionPane.showMessageDialog(null, "Selecione uma linha!!");
        }
        else{         
            show(s);
        }
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExportarActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileCustomFilter filtro = new FileCustomFilter("excel files", new String[]{"xls"});
        chooser.setFileFilter(filtro);
        chooser.setAcceptAllFileFilterUsed(false);
        
        int result = chooser.showSaveDialog(null);
       
        if(result == JFileChooser.APPROVE_OPTION){
            PrintWriter pw = null;
            try {
                
                String filepath = chooser.getSelectedFile().getAbsolutePath();
                
                DataExportExcel excel = new DataExportExcel();
                excel.expExcel(filepath, this.setores);
                
//                File file = chooser.getSelectedFile();
//                pw = new PrintWriter(new FileWriter(file));
//                pw.print("Texto salvo!!");
//                pw.close();
                
            } catch (Exception ex) {
                Logger.getLogger(JIFGestaoSetor.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                
            }
        }
        else{
            return;
        }
    }//GEN-LAST:event_jbExportarActionPerformed

    public Setor getSelectedSetor(){
        int line = getTable().getSelectedRow();
        if(line != -1){
            return ((SetorTableModel)getTable().getModel()).getSetorAt(line);
        }
        return null;
    }
    
    public JTable getTable(){
        return jtSetores;
    }
    
    private void listenerTable() {
        getTable().addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(MouseEvent e) {
                if(e.getClickCount() == 2){                                          
                    Setor c = getSelectedSetor();
                    if(c != null){
                        show(c);
                    }                    
                }
            }
            
        });
    }
    
    private ArrayList<Setor> FindCultureAtBase(String nome){
        GenericDAO dao = new GenericDAO(JPAUtil.createEntityManager(), Setor.class);
        return (ArrayList<Setor>) dao.findByName(nome);
        
    }
    
    private ArrayList<Setor> findAllCultures(){
        GenericDAO dao = new GenericDAO(JPAUtil.createEntityManager(), Setor.class);
        return (ArrayList<Setor>) dao.findAll();
    }
    
    public void show(Setor s){
        JIFSetor frame = new JIFSetor();
        frame.setSetor(s);
        frame.setTitle("Editar Setor");
        getParent().add(frame);
        frame.setVisible(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbExportar;
    private javax.swing.JButton jbFechar;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JTable jtSetores;
    private javax.swing.JTextField tfPesquisar;
    // End of variables declaration//GEN-END:variables
    private ArrayList<Setor> setores;
    
    
    private void habilitaExportarDados() {
        if(!setores.isEmpty()){
           jbExportar.setVisible(true);
        }
    }
}
